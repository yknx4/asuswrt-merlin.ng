name: Build
on:
  push:
    branches-ignore:
      - master
      - mainline
      - DEV_45581_3
    tags: ["*"]
jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
       include:
        #  - model: "dsl-ax82u"
        #    release-dir: "src-rt-5.02axhnd.675x"
         - model: "rt-ax82u"
           release-dir: "src-rt-5.02axhnd.675x"
        #  - model: "dsl-ac68u"
        #    release-dir: "src-rt-6.x.4708"
    env:
      TOOLCHAIN_BASE: ${{ github.workspace }}/opt/toolchains
      LANG: C.UTF-8
      SHELL: /bin/bash
      MODEL: ${{ matrix.model }}
      RELEASE_DIR: ${{ matrix.release-dir }}

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install Deps
        uses: ./.github/actions/install-deps
      - run: git restore-mtime release
      - name: Install Toolchain
        uses: ./.github/actions/install-toolchain
      - name: Cache multiple paths
        uses: actions/cache@v2
        with:
          path: |
            release/**/*.a
            release/**/*.o
            release/**/*.Tpo
            release/**/*.lo
            release/**/*.so
            release/**/*.mo
            release/**/*.pot
            release/**/*.depend
            release/**/*.prep
            release/**/*.map
            release/**/*.unresolved 
            release/**/*.symbols
          key: ${{ runner.os }}-${{ github.ref_name }}-dsl-ax82u-src-rt-5.02axhnd.675x-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ github.ref_name }}-dsl-ax82u-src-rt-5.02axhnd.675x-
      - name: Set Version from TAG
        if: startsWith(github.ref, 'refs/tags')
        run: |
          MAJOR_VER=$(echo "${{ github.ref }}" | sed -E 's/([0-9.]*)[_-]?(.*)/\1/')
          MINOR_VER=$(echo "${{ github.ref }}" | sed -E 's/([0-9.]*)[_-]?(.*)/\2/')
          sed -i "s/SERIALNO=.*/SERIALNO=${MAJOR_VER}/g" release/src-rt/version.conf
          sed -i "s/EXTENDNO=.*/EXTENDNO=${MINOR_VER}/g" release/src-rt/version.conf
      - name: Generate changelog
        env:
          CHANGELOG_FILE: "/tmp/CHANGELOG"
        run: |
          python tools/get-last-notes.py > "${CHANGELOG_FILE}"
          cat "${CHANGELOG_FILE}"
      - name: Build firmware
        shell: bash
        env:
          V_WORKSPACE: /_w
          PROJECT_DIR: /_w
          MODEL: "dsl-ax82u"
          RELEASE_DIR: "src-rt-5.02axhnd.675x"
          PATH: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/toolchains/crosstools-arm-gcc-5.3-linux-4.1-glibc-2.22-binutils-2.25/usr/bin:/opt/toolchains/crosstools-aarch64-gcc-5.3-linux-4.1-glibc-2.22-binutils-2.25/usr/bin:/opt/toolchains/crosstools-arm-gcc-5.5-linux-4.1-glibc-2.26-binutils-2.28.1/usr/bin:/opt/toolchains/crosstools-aarch64-gcc-5.5-linux-4.1-glibc-2.26-binutils-2.28.1/usr/bin:/opt/brcm-arm/bin:/opt/toolchains/crosstools-arm-gcc-5.3-linux-4.1-glibc-2.22-binutils-2.25/usr/bin:/opt/toolchains/crosstools-aarch64-gcc-5.3-linux-4.1-glibc-2.22-binutils-2.25/usr/bin:/opt/toolchains/crosstools-arm-gcc-5.5-linux-4.1-glibc-2.26-binutils-2.28.1/usr/bin:/opt/toolchains/crosstools-aarch64-gcc-5.5-linux-4.1-glibc-2.26-binutils-2.28.1/usr/bin:/opt/brcm-arm/bin"
          BWDPI_KEYS_DSLAC68U: ""
          BWDPI_KEYS_DSLAX82U: ""
          BWDPI_KEYS_RTAX82U: ""
        run: |
          sudo ln -s ${{ github.workspace }} /_w
          echo "Setting up toolchains"
          export LD_LIBRARY_PATH=$LD_LIBRARY:/opt/toolchains/crosstools-arm-gcc-5.3-linux-4.1-glibc-2.22-binutils-2.25/usr/lib
          export TOOLCHAIN_BASE=/opt/toolchains
          export PATH=$PATH:/opt/toolchains/crosstools-arm-gcc-5.3-linux-4.1-glibc-2.22-binutils-2.25/usr/bin
          export PATH=$PATH:/opt/toolchains/crosstools-aarch64-gcc-5.3-linux-4.1-glibc-2.22-binutils-2.25/usr/bin
          export LD_LIBRARY_PATH=$LD_LIBRARY:/opt/toolchains/crosstools-arm-gcc-5.5-linux-4.1-glibc-2.26-binutils-2.28.1/usr/lib
          export PATH=$PATH:/opt/toolchains/crosstools-arm-gcc-5.5-linux-4.1-glibc-2.26-binutils-2.28.1/usr/bin
          export PATH=$PATH:/opt/toolchains/crosstools-aarch64-gcc-5.5-linux-4.1-glibc-2.26-binutils-2.28.1/usr/bin
          export PATH=$PATH:/opt/brcm-arm/bin

          export LD_LIBRARY_PATH=$LD_LIBRARY:${{ env.V_WORKSPACE}}/am-toolchains/brcm-arm-sdk/hndtools-arm-linux-2.6.36-uclibc-4.5.3/lib
          export MERLINUPDATE=y
          cd ${PROJECT_DIR}/release/${RELEASE_DIR}
          echo "----- Files in dir: $(pwd) -----"
          ls -alh
          echo "----- ENV VARS -----"
          # source  ~/.profile
          env
          # echo "----- SETTING UP SECRET FILES -----"
          # if [[ ${MODEL} == "dsl-ac68u" ]]; then
          #   echo $BWDPI_KEYS_DSLAC68U | base64 -d > /tmp/keys.tgz
          #   tar xzf /tmp/keys.tgz --no-same-owner -C ${PROJECT_DIR}/release/${RELEASE_DIR}/router/bwdpi_source/prebuild/DSL-AC68U
          # elif [[ ${MODEL} == "dsl-ax82u" ]]; then
          #   echo $BWDPI_KEYS_DSLAX82U | base64 -d > /tmp/keys.tgz
          #   tar xzf /tmp/keys.tgz --no-same-owner -C ${PROJECT_DIR}/release/${RELEASE_DIR}/router/bwdpi_source/prebuild/DSL-AX82U
          # elif [[ ${MODEL} == "rt-ax82u" ]]; then
          #   echo $BWDPI_KEYS_RTAX82U | base64 -d > /tmp/keys.tgz
          #   tar xzf /tmp/keys.tgz --no-same-owner -C ${PROJECT_DIR}/release/${RELEASE_DIR}/router/bwdpi_source/prebuild/RT-AX82U
          # fi
          echo "----- BUILD -----"
          make ${MODEL} | tee "/tmp/build.log"
          echo "------ DONE -----"
          ls ${PROJECT_DIR}/release/${RELEASE_DIR}/image/
      - name: Prepare workspace
        shell: bash
        env:
          PROJECT_DIR: ${{ github.workspace }}
        run: |
          export IMAGE_PATH=${PROJECT_DIR}/release/${RELEASE_DIR}/image/
          mkdir -p ${{ github.workspace }}/workspace/release/
          if [[ ${MODEL} == "dsl-ac68u" ]]; then
            mv "${IMAGE_PATH}/DSL-AC68U_${CIRCLE_TAG}.trx" "${IMAGE_PATH}/DSL-AC68U_${CIRCLE_TAG}_NO-DSL-FIRMWARE.trx"
            cp ${IMAGE_PATH}/*.trx ${{ github.workspace }}/workspace/release/
            cp ${IMAGE_PATH}/DSL*DSL*.md5 ${{ github.workspace }}/workspace/release/ || :
          elif [[ ${MODEL} == "rt-ax82u" ]] || [[ ${MODEL} == "dsl-ax82u" ]]; then
            cp ${IMAGE_PATH}/*_cferom_puresqubi.md5 workspace/release
            cp ${IMAGE_PATH}/*_cferom_puresqubi.w   workspace/release || :
          fi
          cp /tmp/build.log ${{ github.workspace }}/workspace/release/${MODEL}-build.log
          if [ -z "${CIRCLE_TAG}" ]; then
            echo "No CHANGELOG to copy. Not a release build."
          else
            # Changelogs are the same for each models since we are building from the same branch. We do use only the one generated by DSL-AC68U for now.
            if [[ ${MODEL} == "dsl-ac68u" ]]; then
              cp "${CHANGELOG_FILE}" workspace/release
            fi
          fi
      - name: Archive built images
        uses: actions/upload-artifact@v2
        with:
          name: release-${{ matrix.model }}
          path: ./workspace/release